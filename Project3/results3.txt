Overall, this seemed to be a very efficient algorithm. All knapsack instances were solved within a couple seconds total. Each graph instance where a possible coloring that had 0 conflicts was solved within seconds. However, when no solution containing 0 conflicts existed, the solver was much slower (even timing out in the larger instances). This is because it would exhaust every unfathomed branch to try to get a better answer, whereas if a 0 solution existed, it would reach that solution and stop (since 0 is the best possible answer). The key distinction between this and exhaustive search is that fathomed branches would not be further branched (i.e. color 12-3 only ran 26 iterations, whereas exhaustive search would have searched 3^12 possible solutions). To make this distinct from a greedy algorithm result, this ILP algorithm will find a best feasible graph solution if one exists (meaning 0 conflicts), whereas a greedy algorithm may not be able to reach that solution pending the heuristic. 
